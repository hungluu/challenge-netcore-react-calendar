//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v1.3.0.4
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.EntityFrameworkCore;
using WebAPI.Domain.Seedworks;

namespace WebAPI.Infrastructure.Context
{
    /// <inheritdoc/>
    public partial class ShiftCalendarContext : Microsoft.EntityFrameworkCore.DbContext
   {
      #region DbSets
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.Admins> Admins { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.BaseEntity> BaseEntities { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.Employees> Employees { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.ShiftBookings> ShiftBookings { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.Shifts> Shifts { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.ShiftSettings> ShiftSettings { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.ShopLocations> ShopLocations { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::WebAPI.Infrastructure.Entities.Shops> Shops { get; set; }
      #endregion DbSets

      /// <summary>
      /// Default connection string
      /// </summary>
      public static string ConnectionString { get; set; } = @"Data Source=localhost;Integrated Security=True";

      /// <inheritdoc />
      public ShiftCalendarContext(DbContextOptions<ShiftCalendarContext> options) : base(options)
      {
      }

      partial void CustomInit(DbContextOptionsBuilder optionsBuilder);

      /// <inheritdoc />
      protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
      {
         CustomInit(optionsBuilder);
      }

      partial void OnModelCreatingImpl(ModelBuilder modelBuilder);
      partial void OnModelCreatedImpl(ModelBuilder modelBuilder);

      /// <inheritdoc />
      protected override void OnModelCreating(ModelBuilder modelBuilder)
      {
         base.OnModelCreating(modelBuilder);
         OnModelCreatingImpl(modelBuilder);

         modelBuilder.HasDefaultSchema("dbo");

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.Admins>()
                     .Property(t => t.UserName)
                     .IsRequired();

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.BaseEntity>()
                     .ToTable("BaseEntities")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.BaseEntity>()
                     .Property(t => t.Id)
                     .IsRequired()
                     .ValueGeneratedOnAdd();

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.Employees>()
                     .Property(t => t.Email)
                     .IsRequired();
         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.Employees>()
                     .HasMany(x => x.ShiftBookings)
                     .WithOne(x => x.Employee)
                     .HasForeignKey("Employee_Id")
                     .IsRequired();

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.ShiftBookings>()
                     .HasOne(x => x.ShopLocation)
                     .WithMany(x => x.ShiftBookings)
                     .HasForeignKey("ShopLocation_Id");

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.Shifts>()
                     .HasOne(x => x.ShiftBooking)
                     .WithOne()
                     .HasForeignKey<global::WebAPI.Infrastructure.Entities.Shifts>("ShiftBooking_Id")
                     .IsRequired();

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.ShiftSettings>()
                     .Property(t => t.Rule)
                     .IsRequired();
         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.ShiftSettings>()
                     .Property(t => t.Quantity)
                     .IsRequired();
         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.ShiftSettings>()
                     .HasOne(x => x.ShopLocation)
                     .WithMany(x => x.ShiftSettings)
                     .HasForeignKey("ShopLocation_Id");

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.ShopLocations>()
                     .Property(t => t.Name)
                     .IsRequired();

         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.Shops>()
                     .Property(t => t.Name)
                     .IsRequired();
         modelBuilder.Entity<global::WebAPI.Infrastructure.Entities.Shops>()
                     .HasMany(x => x.ShopLocations)
                     .WithOne(x => x.Shop)
                     .HasForeignKey("Shop_Id")
                     .IsRequired();

         OnModelCreatedImpl(modelBuilder);
      }
   }
}
